@startuml 
noncopyable <|-- FixedBuffer
class FixedBuffer <<int SIZE>>
{
    __public function__
    + FixedBuffer()
    + ~FixedBuffer()
    + void append(const char *buf, size_t len)
    + const char *data()const 
    + int length() const 
    + char *current()
    + int avail() const 
    + void add(size_t len)
    + void reset()
    + void bzero()
    + string toString() const 

    __private function__
    - const char *end() const 

    __private data__
    - char data_[SIZE]
    - char *cur_;
}


noncopyable <|-- LogStream
LogStream *-- FixedBuffer
class LogStream
{
    __public function__
    + LogStream &operator<<(bool)
    + LogStream &operator<<(short)
    + LogStream &operator<<(unsigned short)
    + LogStream &operator<<(int)
    + LogStream &operator<<(unsigned int)
    + LogStream &operator<<(long)
    + LogStream &operator<<(unsigned long)
    + LogStream &operator(unsigned long long)
    
    + LogStream &operator<<(const void*)
    
    + LogStream &operator<<(float)
    + LogStream &operator<<(double)

    + LogStream &operator<<(char)
    + LogStream &operator<<(const char *)
    + LogStream &operator<<(const string &)

    __public function__ 
    void append(const char *data, int len)
    const Buffer &buffer()const 
    void resetBuffer()

    __private function__
    void staticCheck()
    void formatInteger <<T>>(T)

    __private data__
    Buffer buffer_;
    {static}const int kMaxNumericSize = 48
}
@enduml 